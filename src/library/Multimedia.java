package library;

import java.time.LocalDate;
import java.util.PriorityQueue;
import library.management.Reserve;
import library.management.Loan;

/**
 * Class that represents a general multimedia. Superclass of Article, Book, Journal, 
 * Magazine, News.
 * 
 * @author Matheus Reato (RA: 244088), Caio Taishi (RA: 242908).
 */

abstract public class Multimedia {
    // Private Attributes ---------------------------------------------------------------
    private String title;
    private String digitalContent;                                 //Define content type.
    private String author;
    private String publishingCompany;
    private String genre;
    private String summary;
    private String cover;
    private String whereToFound;                   // Can be used to store URL links too.
    private int yearOfPublication;
    private int ncpys;
    private int id;
    private boolean available;
    private int timesBorrowed;
    private LocalDate addedDate;
    private Loan loan;
    private PriorityQueue<Reserve> reserves;      // Max-heap prioritized by pickup date.

    // Constructor ----------------------------------------------------------------------
    public Multimedia(String title, String digitalContent, String author, String publishingCompany,
                      String genre, String summary, String cover, String whereToFound,
                      int yearOfPublication, int ncpys, int id) {
        this.title = title;
        this.digitalContent = digitalContent;
        this.author = author;
        this.publishingCompany = publishingCompany;
        this.genre = genre;
        this.summary = summary;
        this.cover = cover;
        this.whereToFound = whereToFound;
        this.yearOfPublication = yearOfPublication;
        this.ncpys = ncpys;
        this.id = id;                 // Multimedia ID will be generated by hash in the future.
        this.available = true;
        this.timesBorrowed = 0;
        this.addedDate = LocalDate.now();
        this.loan = null;
    }

    // Getters --------------------------------------------------------------------------
    public String getTitle() {
        return title;
    }

    public String getDigitalContent() {
        return digitalContent;
    }

    public String getAuthor() {
        return author;
    }

    public String getPublishingCompany() {
        return publishingCompany;
    }

    public String getGenre() {
        return genre;
    }

    public String getSummary() {
        return summary;
    }

    public String getCover() {
        return cover;
    }

    public String getWhereToFound() {
        return whereToFound;
    }

    public int getYearOfPublication() {
        return yearOfPublication;
    }

    public int getNcpys() {
        return ncpys;
    }

    public int getId() {
        return id;
    }

    public boolean getAvailable() {
        return available;
    }

    public int getTimesBorrowed() {
        return timesBorrowed;
    }

    public LocalDate getAddedDate() {
        return addedDate;
    }

    public Loan getLoan() {
        return loan;
    }

    public PriorityQueue<Reserve> getReserves() {
        return reserves;
    }

    // Setters --------------------------------------------------------------------------
    public void setDigitalContent(String newDigitalContent) {
        this.digitalContent = newDigitalContent;
    }
    
    public void setAuthor(String newAuthor) {
        this.author = newAuthor;
    }

    public void setPublishingCompany(String newPublishingCompany) {
        this.publishingCompany = newPublishingCompany;
    }

    public void setGenre(String newGenre) {
        this.genre = newGenre;
    }

    public void setSummary(String newSummary) {
        this.summary = newSummary;
    }

    public void setCover(String newCover) {
        this.cover = newCover;
    }

    public void setWhereToFound(String newWhereToFound) {
        this.whereToFound = newWhereToFound;
    }

    public void setYearOfPublication(int newYearOfPublication) {
        this.yearOfPublication = newYearOfPublication;
    }

    public void setNcpys(int newNcpys) {
        this.ncpys = newNcpys;
    }

    public void setId(int newId) {
        this.id = newId;
    }

    public void setAvailable(boolean newStatus) {
        this.available = newStatus;
    }

    public void setLoan(Loan newLoan) {
        this.loan = newLoan;
    }

    // Methods --------------------------------------------------------------------------
    /**
     * Method to try and increment the amount of times a multimedia has been borrowed by a user
     * or member of staff upon lending it.
     *
     * @return true on success and false on failure.
     */
    public boolean incrementTimesBorrowed() {
        if (this.available) {
            this.timesBorrowed++;
            return true;
        }
        else {
            return false;
        }
    }

    /**
     * Method that inserts a new reserve into the reserves max-heap.
     *
     * @param newReserve the new reserve to be added to reserves.
     */
    public void addReserve(Reserve newReserve) {
        reserves.add(newReserve);
    }

    /**
     * Method that retrieves the Reserve object inside the reserves heap with the maximum
     * pickup date.
     *
     * @return the reserve with max pickup date.
     */
    public Reserve getLatestReserve() {
        return reserves.peek();
    }
}
